-- Create the database
CREATE DATABASE LibraryDB;
USE LibraryDB;

-- Table for Books
CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255) NOT NULL,
    genre VARCHAR(100),
    publication_year INT,
    available_copies INT DEFAULT 1
);

-- Table for Borrowers
CREATE TABLE Borrowers (
    borrower_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(15),
    address TEXT
);

-- Table for Loans
CREATE TABLE Loans (
    loan_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    borrower_id INT,
    loan_date DATE DEFAULT CURDATE(),
    due_date DATE,
    return_date DATE,
    FOREIGN KEY (book_id) REFERENCES Books(book_id) ON DELETE CASCADE,
    FOREIGN KEY (borrower_id) REFERENCES Borrowers(borrower_id) ON DELETE CASCADE
);

-- Table for Fines
CREATE TABLE Fines (
    fine_id INT AUTO_INCREMENT PRIMARY KEY,
    loan_id INT,
    amount DECIMAL(5,2) DEFAULT 0.00,
    paid BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (loan_id) REFERENCES Loans(loan_id) ON DELETE CASCADE
);

-- Insert Sample Data
INSERT INTO Books (title, author, genre, publication_year, available_copies) VALUES
('The Great Gatsby', 'F. Scott Fitzgerald', 'Fiction', 1925, 3),
('1984', 'George Orwell', 'Dystopian', 1949, 2),
('To Kill a Mockingbird', 'Harper Lee', 'Fiction', 1960, 4);

INSERT INTO Borrowers (name, email, phone, address) VALUES
('John Doe', 'john@example.com', '1234567890', '123 Main St'),
('Jane Smith', 'jane@example.com', '9876543210', '456 Elm St');

-- Sample loan transaction
INSERT INTO Loans (book_id, borrower_id, due_date) VALUES
(1, 1, DATE_ADD(CURDATE(), INTERVAL 14 DAY));

-- Query to find overdue books
SELECT b.name, bo.title, l.due_date 
FROM Loans l
JOIN Borrowers b ON l.borrower_id = b.borrower_id
JOIN Books bo ON l.book_id = bo.book_id
WHERE l.return_date IS NULL AND l.due_date < CURDATE();